/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name:
System Name:
System Number:
Programmer:
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
/*******************************************************************************************
  Include Libraries
  (Uncomment and include additional libraries as needed)
*******************************************************************************************/

                    
#USER_SIMPLSHARP_LIBRARY "SCConfigSPlus"
/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
DIGITAL_INPUT Save;
ANALOG_INPUT DspType,CommunicationsType,AudioConferencingEnabled; 
STRING_INPUT Port[5],IpAddress[64],FileName[128];

ANALOG_OUTPUT DspTypeOut,CommunicationsTypeOut,AudioConferencingEnabledOut;
STRING_OUTPUT PortOut,IpAddressOut;
DIGITAL_OUTPUT ShowSave;

/*******************************************************************************************
  SOCKETS
  (Uncomment and define socket definitions as needed)
*******************************************************************************************/

/*******************************************************************************************
  Parameters
  (Uncomment and declare parameters as needed)
*******************************************************************************************/

/*******************************************************************************************
  Parameter Properties
  (Uncomment and declare parameter properties as needed)
*******************************************************************************************/

/*******************************************************************************************
  Structure Definitions
  (Uncomment and define structure definitions as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: struct.myString = "";
*******************************************************************************************/

/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/
 DspConfigurationReader _configReader;
 DspConfigurationWriter _configWriter;
 Dsp _config;


/*******************************************************************************************
  Functions
  (Add any additional functions here)
  Note:  Functions must be physically placed before the location in
         the code that calls them.
*******************************************************************************************/ 
eventhandler OnConfigChangedHandler(DspConfigurationReader reader, Dsp config)
{
	_config = config;

	DspTypeOut = _config.Type;	
	CommunicationsTypeOut = _config.CommunicationsType;
	IpAddressOut = _config.IpAddress;	
	PortOut = itoa(_config.Port);
	AudioConferencingEnabledOut = _config.AudioConference;
}

FUNCTION SaveSettings()
{
	try
	{
		if(ShowSave = 1)
		{
			_configWriter.SaveSettings(_config);
		}
	}
	catch
	{
		trace("Exception while saving configuration: %s", GetExceptionMessage());
		GenerateUserError("Exception while saving configuration: %s", GetExceptionMessage());
	}

	ShowSave = 0;
}

/*******************************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
*******************************************************************************************/

CHANGE DSPType
{
	DspTypeOut = DspType;

	if(DspType <> _config.Type)
	{
		_config.Type = DspType;
		ShowSave = 1;
	}
}

CHANGE CommunicationsType
{
	CommunicationsTypeOut = CommunicationsType;

	if(CommunicationsType <> _config.CommunicationsType)
	{
		_config.CommunicationsType = CommunicationsType;
		ShowSave = 1;
	}
}

CHANGE Port
{
 	PortOut = Port;

	if(atoi(Port) <> _config.Port)
	{
		_config.Port = atoi(Port);
		ShowSave = 1;
	}
}

CHANGE IpAddress
{
	IpAddressOut = IpAddress;
	
	if(CompareStringsNoCase(IpAddress,_config.IpAddress) <> 0)
	{
		_config.IpAddress = IpAddress;
		ShowSave = 1;
	}
}

Change AudioConferencingEnabled
{
	AudioConferencingEnabledOut = AudioConferencingEnabled;
	
	if(AudioConferencingEnabled <> _config.AudioConference)
	{
		_config.AudioConference = AudioConferencingEnabled;
		ShowSave = 1;
	}
}

push Save
{
	SaveSettings();
}



/*******************************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/

Function Main()
{
    WaitForInitializationComplete();
	
	registerevent(_configReader,OnConfigurationChanged,OnConfigChangedHandler);

	_configReader.Initialize(FileName);
	
	_configReader.ReadSettings();

	_configWriter.Initialize(FileName);
}


